<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	 
	<!-- *************************************** database *************************************** -->
	<context:property-placeholder location="classpath:jpw.properties" />
	<!-- J2EE environment's JNDI dataSource -->
    <jee:jndi-lookup id="dataSource" jndi-name="${db.jndi.name}"/>
    
    <!-- Hibernate SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="annotatedClasses">
	    	<list>
	    	    <value>org.ganjp.jpw.am.model.AmUser</value>
	    	    <value>org.ganjp.jpw.am.model.AmUserDetail</value>
	    	    <value>org.ganjp.jpw.am.model.AmRole</value>
	    	    <value>org.ganjp.jpw.am.model.AmUserRole</value>
	    	    <value>org.ganjp.jpw.am.model.AmRoleMenu</value>
	    		<value>org.ganjp.jpw.bm.model.BmConfig</value>
	    		<value>org.ganjp.jpw.bm.model.BmParam</value>
	    		<value>org.ganjp.jpw.bm.model.BmMenu</value>
	    		<value>org.ganjp.jpw.cm.model.CmCategory</value>
	    		<value>org.ganjp.jpw.cm.model.CmArticle</value>
	    		<value>org.ganjp.jpw.cm.model.CmArticleCategory</value>
	    		<value>org.ganjp.jpw.cm.model.CmArticleRemark</value>
	    		
	    		<value>org.ganjp.jpw.cm.model.CmPhoto</value>
	    		<value>org.ganjp.jpw.cm.model.CmPhotoCategory</value>
	    		<value>org.ganjp.jpw.cm.model.CmVocabularyCategory</value>
	    		<value>org.ganjp.jpw.cm.model.CmVocabulary</value>
	    		<value>org.ganjp.jpw.cm.model.CmVocabularyArticle</value>
	    		<value>org.ganjp.jpw.cm.model.CmAudio</value>
	    		<value>org.ganjp.jpw.cm.model.CmVideo</value>
	    		<value>org.ganjp.jpw.cm.model.CmFile</value>
	    		
	    		<value>org.ganjp.jpw.cm.model.CmEvaluateTable</value>
	    		<value>org.ganjp.jpw.cm.model.CmEvaluateItem</value>
	    		<value>org.ganjp.jpw.cm.model.CmEvaluateResult</value>
	    		<value>org.ganjp.jpw.cm.model.CmUserEvaluateTableResult</value>
	    		
	    		<value>org.ganjp.jpw.bm.model.BmUserLoginInfo</value>
	    		<value>org.ganjp.jpw.cm.model.CmFeedback</value>
	     	</list>
	   	</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.autoReconnect">true</prop>
			</props>
		</property>
		<property name="eventListeners">
			<map>
				<entry key="merge">
					<bean class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener" />
				</entry>
			</map>
		</property>
	</bean>
	
	<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- Instruct Spring to perform declarative transaction management automatically on annotated classes. -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- auto scan spring component -->
	<context:component-scan base-package="org.ganjp.jpw"> 
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" /> 
	</context:component-scan>
	
	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl" />
	
	<!-- this is a template message that we can pre-load with default state -->
	<bean id="templateMessage" class="org.springframework.mail.SimpleMailMessage"/>
	
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="10"/>
		<property name="maxPoolSize" value="30"/>
	</bean>
</beans>
